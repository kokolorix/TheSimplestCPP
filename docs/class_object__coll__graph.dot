digraph "Object"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="Object",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="Serialize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_serialize.html",tooltip="Serialize is the interface for objects which can be persisted in a simple string, as JSON or XML stru..."];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" name_" ,fontname="Helvetica"];
  Node3 [label="string",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Name" ,fontname="Helvetica"];
  Node4 [label="PropertyRW\< string \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_property_r_w.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="PropertyR\< string \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_property_r.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" getter_" ,fontname="Helvetica"];
  Node6 [label="function\< string(void)\>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" setter_" ,fontname="Helvetica"];
  Node7 [label="function\< void(string\l newValue)\>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Properties" ,fontname="Helvetica"];
  Node8 [label="PropertyRW\< PropertyList \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_property_r_w.html",tooltip=" "];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="PropertyR\< PropertyList \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_property_r.html",tooltip=" "];
  Node10 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" getter_" ,fontname="Helvetica"];
  Node10 [label="function\< PropertyList\l(void)\>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" setter_" ,fontname="Helvetica"];
  Node11 [label="function\< void(PropertyList\l newValue)\>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node12 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" properties_" ,fontname="Helvetica"];
  Node12 [label="vector\< PropertyPtr \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
}
